import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.FileSystems;
import java.nio.file.Path;

import javax.imageio.ImageIO;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.Result;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.LuminanceSource;

public class Qrgenerator {
	private static String QRCODE_PATH="F:\\BSE 4\\QRCODE-SeRVER\\";
public String writeQRCode(Form form) throws Exception {
	String qrcode=QRCODE_PATH+form.getTeacherName()+"-QRCODE.png";
QRCodeWriter writer=new QRCodeWriter();
BitMatrix bitMatrix=writer.encode(form.getCourseID() + "\n" +form.getTeacherName() +
		"\n" + form.getSemester() + "\n" + form.getProgram(),BarcodeFormat.QR_CODE,350,350);
Path path=FileSystems.getDefault().getPath(qrcode);
MatrixToImageWriter.writeToPath(bitMatrix, "PNG", path);

	
	
	return "QRCODE is generated successfully....";
	
}
public String readQRCode(String qrcodeImage) throws Exception{
BufferedImage bufferedImage=ImageIO.read(new File(qrcodeImage))	;
	LuminanceSource luminanceSource=new BufferedImageLuminanceSource(bufferedImage);
	BinaryBitmap binaryBitmap=new BinaryBitmap(new HybridBinarizer(luminanceSource));
	Result result=new MultiFormatReader().decode(binaryBitmap);
	
	return result.getText();
	
}




public static void main(String[]args) throws Exception  {
	Qrgenerator codeGenerator=new Qrgenerator();
	System.out.println(codeGenerator.writeQRCode(new Form("Course ID:111","Teacer's Name:Satyam Gautam","Program:BSE","Semester:IV")));
}
}
